package apleasebot.commands;

import apleasebot.exceptions.IllegalBotArgumentException;
import apleasebot.tasks.Event;
import apleasebot.tasks.Task;
import apleasebot.tasks.TaskList;
import apleasebot.ui.APleaseBot;
import apleasebot.ui.TimeFormatter;

public class EventCommand implements Command{
    // fields
    private String input;

    // constructor
    public EventCommand(String input) {
        this.input = input;
    }

    private static String[] getStrings(String input) {
        String[] sub = input.substring(6).split("\\\\"); // solution to backslash character found using Google search
        if (sub.length != 3) throw new IllegalBotArgumentException("Wrong number of arguments!", input);
        if (!sub[1].startsWith("from")) throw new IllegalBotArgumentException("No 'from' argument!", input);
        if (sub[1].length() < 5) throw new IllegalBotArgumentException("No argument found!", input); // no argument
        if (!sub[2].startsWith("to")) throw new IllegalBotArgumentException("No 'to' argument!", input);
        if (sub[2].length() < 3) throw new IllegalBotArgumentException("No argument found!", input); // no argument
        return sub;
    }

    @Override
    public void execute(TaskList tasks) {
        if (input.length() < 6) throw new IllegalBotArgumentException("No argument found!", input); // no argument

        String[] sub = getStrings(input); // function to group multiple error-catching statements auto-generated by IntelliJ IDEA IDE


        String task = sub[0];
        if (task.isEmpty()) throw new IllegalBotArgumentException("No Task stated:", input);

        String startTime = sub[1].substring(5).stripLeading().stripTrailing();
        if (startTime.isEmpty()) throw new IllegalBotArgumentException("No 'from' string stated:", input);
        String endTime = sub[2].substring(3).stripLeading().stripTrailing();
        if (endTime.isEmpty()) throw new IllegalBotArgumentException("No 'to' string stated:", input);

        Task newTask = new Event(task, false, TimeFormatter.getStandard(startTime), TimeFormatter.getStandard(endTime));
        tasks.add(newTask);

        System.out.println(
                APleaseBot.line +
                        "Got it. I've added this task:\n" +
                        "  " + newTask.toString() + "\n" +
                        "Now you have " + tasks.getItemCount() + " tasks in the list" + "\n" +
                        APleaseBot.line
        );
    }
}
