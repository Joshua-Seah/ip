package apleasebot.commands;

import apleasebot.exceptions.IllegalBotArgumentException;
import apleasebot.tasks.Event;
import apleasebot.tasks.Task;
import apleasebot.tasks.TaskList;
import apleasebot.ui.APleaseBot;
import apleasebot.ui.TimeFormatter;

/**
 * Encapsulates the logic for when a user says event
 */
public class EventCommand implements Command {
    private final String input;

    public EventCommand(String input) {
        this.input = input;
    }

    /* Function to group multiple error-catching statements auto-generated by IntelliJ IDEA IDE */
    private static String[] checkArgs(String input) {
        String[] sub = input.substring(6).split("\\\\");
        if (sub.length != 3) {
            throw new IllegalBotArgumentException("Wrong number of arguments!", input);
        }
        if (!sub[1].startsWith("from")) {
            throw new IllegalBotArgumentException("No 'from' argument!", input);
        }
        /* Case where /from has no argument */
        if (sub[1].length() < 5) {
            throw new IllegalBotArgumentException("No argument found!", input);
        }
        if (!sub[2].startsWith("to")) {
            throw new IllegalBotArgumentException("No 'to' argument!", input);
        }
        /* Case where /to has no argument */
        if (sub[2].length() < 3) {
            throw new IllegalBotArgumentException("No argument found!", input);
        }
        return sub;
    }

    @Override
    public String execute(TaskList tasks) {
        if (input.length() < 6) {
            throw new IllegalBotArgumentException("No argument found!", input); // no argument
        }

        String[] sub = checkArgs(input);
        String task = sub[0];
        if (task.isEmpty()) {
            throw new IllegalBotArgumentException("No Task stated:", input);
        }

        String startTime = sub[1].substring(5).stripLeading().stripTrailing();
        if (startTime.isEmpty()) {
            throw new IllegalBotArgumentException("No start time indicated:", input);
        }
        String endTime = sub[2].substring(3).stripLeading().stripTrailing();
        if (endTime.isEmpty()) {
            throw new IllegalBotArgumentException("No end time indicated:", input);
        }

        Task newTask = new Event(task, false, TimeFormatter.getStandard(startTime), TimeFormatter.getStandard(endTime));
        tasks.addTask(newTask);

        return APleaseBot.LINE
                + "Got it. I've added this task:\n"
                + "  " + newTask.toString() + "\n"
                + "Now you have " + tasks.getItemCount() + " tasks in the list" + "\n"
                + APleaseBot.LINE;
    }
}
